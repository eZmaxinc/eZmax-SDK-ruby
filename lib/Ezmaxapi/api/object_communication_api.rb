=begin
#eZmax API Definition (Full)

#This API expose all the functionnalities for the eZmax and eZsign applications.

The version of the OpenAPI document: 1.2.0
Contact: support-api@ezmax.ca
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.0.1

=end

require 'cgi'

module EzmaxApi
  class ObjectCommunicationApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Send a new Communication
    # The endpoint allows to send one or many elements at once.
    # @param communication_send_v1_request [CommunicationSendV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [CommunicationSendV1Response]
    def communication_send_v1(communication_send_v1_request, opts = {})
      data, _status_code, _headers = communication_send_v1_with_http_info(communication_send_v1_request, opts)
      data
    end

    # Send a new Communication
    # The endpoint allows to send one or many elements at once.
    # @param communication_send_v1_request [CommunicationSendV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(CommunicationSendV1Response, Integer, Hash)>] CommunicationSendV1Response data, response status code and response headers
    def communication_send_v1_with_http_info(communication_send_v1_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ObjectCommunicationApi.communication_send_v1 ...'
      end
      # verify the required parameter 'communication_send_v1_request' is set
      if @api_client.config.client_side_validation && communication_send_v1_request.nil?
        fail ArgumentError, "Missing the required parameter 'communication_send_v1_request' when calling ObjectCommunicationApi.communication_send_v1"
      end
      # resource path
      local_var_path = '/1/object/communication/send'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(communication_send_v1_request)

      # return_type
      return_type = opts[:debug_return_type] || 'CommunicationSendV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ObjectCommunicationApi.communication_send_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjectCommunicationApi#communication_send_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
