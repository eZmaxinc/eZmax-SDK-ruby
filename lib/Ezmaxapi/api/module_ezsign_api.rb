=begin
#eZmax API Definition (Full)

#This API expose all the functionnalities for the eZmax and eZsign applications.

The version of the OpenAPI document: 1.2.0
Contact: support-api@ezmax.ca
Generated by: https://openapi-generator.tech
OpenAPI Generator version: 7.2.0

=end

require 'cgi'

module EzmaxApi
  class ModuleEzsignApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Suggest signers
    # Retrieve previously used Ezsignsigners and all users from the system
    # @param [Hash] opts the optional parameters
    # @return [EzsignSuggestSignersV1Response]
    def ezsign_suggest_signers_v1(opts = {})
      data, _status_code, _headers = ezsign_suggest_signers_v1_with_http_info(opts)
      data
    end

    # Suggest signers
    # Retrieve previously used Ezsignsigners and all users from the system
    # @param [Hash] opts the optional parameters
    # @return [Array<(EzsignSuggestSignersV1Response, Integer, Hash)>] EzsignSuggestSignersV1Response data, response status code and response headers
    def ezsign_suggest_signers_v1_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ModuleEzsignApi.ezsign_suggest_signers_v1 ...'
      end
      # resource path
      local_var_path = '/1/module/ezsign/suggestSigners'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignSuggestSignersV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ModuleEzsignApi.ezsign_suggest_signers_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ModuleEzsignApi#ezsign_suggest_signers_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Suggest templates
    # Retrieve Ezsigntemplates and Ezsigntemplatepackages that can be imported in a Ezsignfolder
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :fki_ezsignfoldertype_id 
    # @return [EzsignSuggestTemplatesV1Response]
    def ezsign_suggest_templates_v1(opts = {})
      data, _status_code, _headers = ezsign_suggest_templates_v1_with_http_info(opts)
      data
    end

    # Suggest templates
    # Retrieve Ezsigntemplates and Ezsigntemplatepackages that can be imported in a Ezsignfolder
    # @param [Hash] opts the optional parameters
    # @option opts [Integer] :fki_ezsignfoldertype_id 
    # @return [Array<(EzsignSuggestTemplatesV1Response, Integer, Hash)>] EzsignSuggestTemplatesV1Response data, response status code and response headers
    def ezsign_suggest_templates_v1_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ModuleEzsignApi.ezsign_suggest_templates_v1 ...'
      end
      if @api_client.config.client_side_validation && !opts[:'fki_ezsignfoldertype_id'].nil? && opts[:'fki_ezsignfoldertype_id'] < 0
        fail ArgumentError, 'invalid value for "opts[:"fki_ezsignfoldertype_id"]" when calling ModuleEzsignApi.ezsign_suggest_templates_v1, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/1/module/ezsign/suggestTemplates'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'fkiEzsignfoldertypeID'] = opts[:'fki_ezsignfoldertype_id'] if !opts[:'fki_ezsignfoldertype_id'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignSuggestTemplatesV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ModuleEzsignApi.ezsign_suggest_templates_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ModuleEzsignApi#ezsign_suggest_templates_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
