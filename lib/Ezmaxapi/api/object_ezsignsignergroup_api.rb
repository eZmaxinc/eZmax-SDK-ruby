=begin
#eZmax API Definition (Full)

#This API expose all the functionnalities for the eZmax and eZsign applications.

The version of the OpenAPI document: 1.2.0
Contact: support-api@ezmax.ca
Generated by: https://openapi-generator.tech
Generator version: 7.4.0

=end

require 'cgi'

module EzmaxApi
  class ObjectEzsignsignergroupApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Create a new Ezsignsignergroup
    # The endpoint allows to create one or many elements at once.
    # @param ezsignsignergroup_create_object_v1_request [EzsignsignergroupCreateObjectV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [EzsignsignergroupCreateObjectV1Response]
    def ezsignsignergroup_create_object_v1(ezsignsignergroup_create_object_v1_request, opts = {})
      data, _status_code, _headers = ezsignsignergroup_create_object_v1_with_http_info(ezsignsignergroup_create_object_v1_request, opts)
      data
    end

    # Create a new Ezsignsignergroup
    # The endpoint allows to create one or many elements at once.
    # @param ezsignsignergroup_create_object_v1_request [EzsignsignergroupCreateObjectV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(EzsignsignergroupCreateObjectV1Response, Integer, Hash)>] EzsignsignergroupCreateObjectV1Response data, response status code and response headers
    def ezsignsignergroup_create_object_v1_with_http_info(ezsignsignergroup_create_object_v1_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ObjectEzsignsignergroupApi.ezsignsignergroup_create_object_v1 ...'
      end
      # verify the required parameter 'ezsignsignergroup_create_object_v1_request' is set
      if @api_client.config.client_side_validation && ezsignsignergroup_create_object_v1_request.nil?
        fail ArgumentError, "Missing the required parameter 'ezsignsignergroup_create_object_v1_request' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_create_object_v1"
      end
      # resource path
      local_var_path = '/1/object/ezsignsignergroup'

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(ezsignsignergroup_create_object_v1_request)

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignsignergroupCreateObjectV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ObjectEzsignsignergroupApi.ezsignsignergroup_create_object_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:POST, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjectEzsignsignergroupApi#ezsignsignergroup_create_object_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Delete an existing Ezsignsignergroup
    # 
    # @param pki_ezsignsignergroup_id [Integer] The unique ID of the Ezsignsignergroup
    # @param [Hash] opts the optional parameters
    # @return [EzsignsignergroupDeleteObjectV1Response]
    def ezsignsignergroup_delete_object_v1(pki_ezsignsignergroup_id, opts = {})
      data, _status_code, _headers = ezsignsignergroup_delete_object_v1_with_http_info(pki_ezsignsignergroup_id, opts)
      data
    end

    # Delete an existing Ezsignsignergroup
    # 
    # @param pki_ezsignsignergroup_id [Integer] The unique ID of the Ezsignsignergroup
    # @param [Hash] opts the optional parameters
    # @return [Array<(EzsignsignergroupDeleteObjectV1Response, Integer, Hash)>] EzsignsignergroupDeleteObjectV1Response data, response status code and response headers
    def ezsignsignergroup_delete_object_v1_with_http_info(pki_ezsignsignergroup_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ObjectEzsignsignergroupApi.ezsignsignergroup_delete_object_v1 ...'
      end
      # verify the required parameter 'pki_ezsignsignergroup_id' is set
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id.nil?
        fail ArgumentError, "Missing the required parameter 'pki_ezsignsignergroup_id' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_delete_object_v1"
      end
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id > 65535
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_delete_object_v1, must be smaller than or equal to 65535.'
      end

      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id < 0
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_delete_object_v1, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/1/object/ezsignsignergroup/{pkiEzsignsignergroupID}'.sub('{' + 'pkiEzsignsignergroupID' + '}', CGI.escape(pki_ezsignsignergroup_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignsignergroupDeleteObjectV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ObjectEzsignsignergroupApi.ezsignsignergroup_delete_object_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjectEzsignsignergroupApi#ezsignsignergroup_delete_object_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Edit multiple Ezsignsignergroupmemberships
    # Using this endpoint, you can edit multiple Ezsignsignergroupmemberships at the same time.
    # @param pki_ezsignsignergroup_id [Integer] 
    # @param ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request [EzsignsignergroupEditEzsignsignergroupmembershipsV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [EzsignsignergroupEditEzsignsignergroupmembershipsV1Response]
    def ezsignsignergroup_edit_ezsignsignergroupmemberships_v1(pki_ezsignsignergroup_id, ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request, opts = {})
      data, _status_code, _headers = ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_with_http_info(pki_ezsignsignergroup_id, ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request, opts)
      data
    end

    # Edit multiple Ezsignsignergroupmemberships
    # Using this endpoint, you can edit multiple Ezsignsignergroupmemberships at the same time.
    # @param pki_ezsignsignergroup_id [Integer] 
    # @param ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request [EzsignsignergroupEditEzsignsignergroupmembershipsV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(EzsignsignergroupEditEzsignsignergroupmembershipsV1Response, Integer, Hash)>] EzsignsignergroupEditEzsignsignergroupmembershipsV1Response data, response status code and response headers
    def ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_with_http_info(pki_ezsignsignergroup_id, ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ObjectEzsignsignergroupApi.ezsignsignergroup_edit_ezsignsignergroupmemberships_v1 ...'
      end
      # verify the required parameter 'pki_ezsignsignergroup_id' is set
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id.nil?
        fail ArgumentError, "Missing the required parameter 'pki_ezsignsignergroup_id' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_ezsignsignergroupmemberships_v1"
      end
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id > 65535
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_ezsignsignergroupmemberships_v1, must be smaller than or equal to 65535.'
      end

      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id < 0
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_ezsignsignergroupmemberships_v1, must be greater than or equal to 0.'
      end

      # verify the required parameter 'ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request' is set
      if @api_client.config.client_side_validation && ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request.nil?
        fail ArgumentError, "Missing the required parameter 'ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_ezsignsignergroupmemberships_v1"
      end
      # resource path
      local_var_path = '/1/object/ezsignsignergroup/{pkiEzsignsignergroupID}/editEzsignsignergroupmemberships'.sub('{' + 'pkiEzsignsignergroupID' + '}', CGI.escape(pki_ezsignsignergroup_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(ezsignsignergroup_edit_ezsignsignergroupmemberships_v1_request)

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignsignergroupEditEzsignsignergroupmembershipsV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ObjectEzsignsignergroupApi.ezsignsignergroup_edit_ezsignsignergroupmemberships_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjectEzsignsignergroupApi#ezsignsignergroup_edit_ezsignsignergroupmemberships_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Edit an existing Ezsignsignergroup
    # 
    # @param pki_ezsignsignergroup_id [Integer] The unique ID of the Ezsignsignergroup
    # @param ezsignsignergroup_edit_object_v1_request [EzsignsignergroupEditObjectV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [EzsignsignergroupEditObjectV1Response]
    def ezsignsignergroup_edit_object_v1(pki_ezsignsignergroup_id, ezsignsignergroup_edit_object_v1_request, opts = {})
      data, _status_code, _headers = ezsignsignergroup_edit_object_v1_with_http_info(pki_ezsignsignergroup_id, ezsignsignergroup_edit_object_v1_request, opts)
      data
    end

    # Edit an existing Ezsignsignergroup
    # 
    # @param pki_ezsignsignergroup_id [Integer] The unique ID of the Ezsignsignergroup
    # @param ezsignsignergroup_edit_object_v1_request [EzsignsignergroupEditObjectV1Request] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(EzsignsignergroupEditObjectV1Response, Integer, Hash)>] EzsignsignergroupEditObjectV1Response data, response status code and response headers
    def ezsignsignergroup_edit_object_v1_with_http_info(pki_ezsignsignergroup_id, ezsignsignergroup_edit_object_v1_request, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ObjectEzsignsignergroupApi.ezsignsignergroup_edit_object_v1 ...'
      end
      # verify the required parameter 'pki_ezsignsignergroup_id' is set
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id.nil?
        fail ArgumentError, "Missing the required parameter 'pki_ezsignsignergroup_id' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_object_v1"
      end
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id > 65535
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_object_v1, must be smaller than or equal to 65535.'
      end

      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id < 0
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_object_v1, must be greater than or equal to 0.'
      end

      # verify the required parameter 'ezsignsignergroup_edit_object_v1_request' is set
      if @api_client.config.client_side_validation && ezsignsignergroup_edit_object_v1_request.nil?
        fail ArgumentError, "Missing the required parameter 'ezsignsignergroup_edit_object_v1_request' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_edit_object_v1"
      end
      # resource path
      local_var_path = '/1/object/ezsignsignergroup/{pkiEzsignsignergroupID}'.sub('{' + 'pkiEzsignsignergroupID' + '}', CGI.escape(pki_ezsignsignergroup_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])
      # HTTP header 'Content-Type'
      content_type = @api_client.select_header_content_type(['application/json'])
      if !content_type.nil?
          header_params['Content-Type'] = content_type
      end

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body] || @api_client.object_to_http_body(ezsignsignergroup_edit_object_v1_request)

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignsignergroupEditObjectV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ObjectEzsignsignergroupApi.ezsignsignergroup_edit_object_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:PUT, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjectEzsignsignergroupApi#ezsignsignergroup_edit_object_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve an existing Ezsignsignergroup's Ezsignsignergroupmemberships
    # @param pki_ezsignsignergroup_id [Integer] 
    # @param [Hash] opts the optional parameters
    # @return [EzsignsignergroupGetEzsignsignergroupmembershipsV1Response]
    def ezsignsignergroup_get_ezsignsignergroupmemberships_v1(pki_ezsignsignergroup_id, opts = {})
      data, _status_code, _headers = ezsignsignergroup_get_ezsignsignergroupmemberships_v1_with_http_info(pki_ezsignsignergroup_id, opts)
      data
    end

    # Retrieve an existing Ezsignsignergroup&#39;s Ezsignsignergroupmemberships
    # @param pki_ezsignsignergroup_id [Integer] 
    # @param [Hash] opts the optional parameters
    # @return [Array<(EzsignsignergroupGetEzsignsignergroupmembershipsV1Response, Integer, Hash)>] EzsignsignergroupGetEzsignsignergroupmembershipsV1Response data, response status code and response headers
    def ezsignsignergroup_get_ezsignsignergroupmemberships_v1_with_http_info(pki_ezsignsignergroup_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ObjectEzsignsignergroupApi.ezsignsignergroup_get_ezsignsignergroupmemberships_v1 ...'
      end
      # verify the required parameter 'pki_ezsignsignergroup_id' is set
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id.nil?
        fail ArgumentError, "Missing the required parameter 'pki_ezsignsignergroup_id' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_get_ezsignsignergroupmemberships_v1"
      end
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id > 65535
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_get_ezsignsignergroupmemberships_v1, must be smaller than or equal to 65535.'
      end

      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id < 0
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_get_ezsignsignergroupmemberships_v1, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/1/object/ezsignsignergroup/{pkiEzsignsignergroupID}/getEzsignsignergroupmemberships'.sub('{' + 'pkiEzsignsignergroupID' + '}', CGI.escape(pki_ezsignsignergroup_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignsignergroupGetEzsignsignergroupmembershipsV1Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ObjectEzsignsignergroupApi.ezsignsignergroup_get_ezsignsignergroupmemberships_v1",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjectEzsignsignergroupApi#ezsignsignergroup_get_ezsignsignergroupmemberships_v1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retrieve an existing Ezsignsignergroup
    # 
    # @param pki_ezsignsignergroup_id [Integer] The unique ID of the Ezsignsignergroup
    # @param [Hash] opts the optional parameters
    # @return [EzsignsignergroupGetObjectV2Response]
    def ezsignsignergroup_get_object_v2(pki_ezsignsignergroup_id, opts = {})
      data, _status_code, _headers = ezsignsignergroup_get_object_v2_with_http_info(pki_ezsignsignergroup_id, opts)
      data
    end

    # Retrieve an existing Ezsignsignergroup
    # 
    # @param pki_ezsignsignergroup_id [Integer] The unique ID of the Ezsignsignergroup
    # @param [Hash] opts the optional parameters
    # @return [Array<(EzsignsignergroupGetObjectV2Response, Integer, Hash)>] EzsignsignergroupGetObjectV2Response data, response status code and response headers
    def ezsignsignergroup_get_object_v2_with_http_info(pki_ezsignsignergroup_id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: ObjectEzsignsignergroupApi.ezsignsignergroup_get_object_v2 ...'
      end
      # verify the required parameter 'pki_ezsignsignergroup_id' is set
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id.nil?
        fail ArgumentError, "Missing the required parameter 'pki_ezsignsignergroup_id' when calling ObjectEzsignsignergroupApi.ezsignsignergroup_get_object_v2"
      end
      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id > 65535
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_get_object_v2, must be smaller than or equal to 65535.'
      end

      if @api_client.config.client_side_validation && pki_ezsignsignergroup_id < 0
        fail ArgumentError, 'invalid value for "pki_ezsignsignergroup_id" when calling ObjectEzsignsignergroupApi.ezsignsignergroup_get_object_v2, must be greater than or equal to 0.'
      end

      # resource path
      local_var_path = '/2/object/ezsignsignergroup/{pkiEzsignsignergroupID}'.sub('{' + 'pkiEzsignsignergroupID' + '}', CGI.escape(pki_ezsignsignergroup_id.to_s))

      # query parameters
      query_params = opts[:query_params] || {}

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'EzsignsignergroupGetObjectV2Response'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['Authorization']

      new_options = opts.merge(
        :operation => :"ObjectEzsignsignergroupApi.ezsignsignergroup_get_object_v2",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ObjectEzsignsignergroupApi#ezsignsignergroup_get_object_v2\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
