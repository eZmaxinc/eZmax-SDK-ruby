=begin
#eZmax API Definition (Full)

#This API expose all the functionnalities for the eZmax and eZsign applications.

The version of the OpenAPI document: 1.2.1
Contact: support-api@ezmax.ca
Generated by: https://openapi-generator.tech
Generator version: 7.10.0

=end

require 'date'
require 'time'

module EzmaxApi
  # A Customer Object
  class CustomerRequest
    # The unique ID of the Customer.
    attr_accessor :pki_customer_id

    # The unique ID of the Company
    attr_accessor :fki_company_id

    # The unique ID of the Customergroup
    attr_accessor :fki_customergroup_id

    # The name of the Customer
    attr_accessor :s_customer_name

    # The unique ID of the Contactinformations
    attr_accessor :fki_contactinformations_id

    # The unique ID of the Contactcontainer
    attr_accessor :fki_contactcontainer_id

    # The unique ID of the Image
    attr_accessor :fki_image_id

    # The unique ID of the Glaccountcontainer
    attr_accessor :fki_glaccountcontainer_id

    # The unique ID of the Language.  Valid values:  |Value|Description| |-|-| |1|French| |2|English|
    attr_accessor :fki_language_id

    # The unique ID of the Department
    attr_accessor :fki_department_id

    # The unique ID of the Paymentmethod
    attr_accessor :fki_paymentmethod_id

    # The unique ID of the Electronicfundstransferbankaccount
    attr_accessor :fki_electronicfundstransferbankaccount_id

    # The unique ID of the Electronicfundstransferbankaccount
    attr_accessor :fki_electronicfundstransferbankaccount_id_directdebit

    # The unique ID of the Sendingmethod
    attr_accessor :fki_sendingmethod_id

    # The unique ID of the Taxassignment.  Valid values:  |Value|Description| |-|-| |1|No tax| |2|GST| |3|HST (ON)| |4|HST (NB)| |5|HST (NS)| |6|HST (NL)| |7|HST (PE)| |8|GST + QST (QC)| |9|GST + QST (QC) Non-Recoverable| |10|GST + PST (BC)| |11|GST + PST (SK)| |12|GST + RST (MB)| |13|GST + PST (BC) Non-Recoverable| |14|GST + PST (SK) Non-Recoverable| |15|GST + RST (MB) Non-Recoverable|
    attr_accessor :fki_taxassignment_id

    # The unique ID of the Attendancestatus
    attr_accessor :fki_attendancestatus_id

    # The unique ID of the Agent.
    attr_accessor :fki_agent_id_variableexpensechargeto

    # The unique ID of the Broker.
    attr_accessor :fki_broker_id_variableexpensechargeto

    # The unique ID of the Customer.
    attr_accessor :fki_customer_id_variableexpensechargeto

    # The unique ID of the Glaccountcontainer
    attr_accessor :fki_glaccountcontainer_id_variableexpensechargeto

    # The unique ID of the Agent.
    attr_accessor :fki_agent_id_supplychargechargeto

    # The unique ID of the Broker.
    attr_accessor :fki_broker_id_supplychargechargeto

    # The unique ID of the Customer.
    attr_accessor :fki_customer_id_supplychargechargeto

    # The unique ID of the Glaccountcontainer
    attr_accessor :fki_glaccountcontainer_id_supplychargechargeto

    # The unique ID of the Invoicealternatelogo
    attr_accessor :fki_invoicealternatelogo_id

    # The unique ID of the Synchronizationlinkserver
    attr_accessor :fki_synchronizationlinkserver_id

    # The unique ID of the User
    attr_accessor :efki_user_id

    # The code of the Customer
    attr_accessor :efks_customer_code

    # The code of the Customer
    attr_accessor :s_customer_code

    # The fulltimeequivalent of the Customer
    attr_accessor :d_customer_fulltimeequivalent

    # The photocopiercode of the Customer
    attr_accessor :i_customer_photocopiercode

    # The longdistancecode of the Customer
    attr_accessor :i_customer_longdistancecode

    # The timewindowstart of the Customer
    attr_accessor :i_customer_timewindowstart

    # The timewindowend of the Customer
    attr_accessor :i_customer_timewindowend

    # The minimumchargeableinterests of the Customer
    attr_accessor :d_customer_minimumchargeableinterests

    # The birthdate of the Customer
    attr_accessor :dt_customer_birthdate

    # The transfer of the Customer
    attr_accessor :dt_customer_transfer

    # The transferappointment of the Customer
    attr_accessor :dt_customer_transferappointment

    # The transfersurvey of the Customer
    attr_accessor :dt_customer_transfersurvey

    # Whether the customer is active or not
    attr_accessor :b_customer_isactive

    # Whether if it's an variableexpensefinanced
    attr_accessor :b_customer_variableexpensefinanced

    # Whether if it's an variableexpensefinancedtaxes
    attr_accessor :b_customer_variableexpensefinancedtaxes

    # Whether if it's an supplychargefinanced
    attr_accessor :b_customer_supplychargefinanced

    # Whether if it's an supplychargefinancedtaxes
    attr_accessor :b_customer_supplychargefinancedtaxes

    # Whether if it's an attendance
    attr_accessor :b_customer_attendance

    attr_accessor :e_customer_type

    attr_accessor :e_customer_marketingcorrespondence

    # Whether if it's an blackcopycarbon
    attr_accessor :b_customer_blackcopycarbon

    # Whether if it's an unsubscribeinfo
    attr_accessor :b_customer_unsubscribeinfo

    # The comment of the Customer
    attr_accessor :t_customer_comment

    attr_accessor :importid

    class EnumAttributeValidator
      attr_reader :datatype
      attr_reader :allowable_values

      def initialize(datatype, allowable_values)
        @allowable_values = allowable_values.map do |value|
          case datatype.to_s
          when /Integer/i
            value.to_i
          when /Float/i
            value.to_f
          else
            value
          end
        end
      end

      def valid?(value)
        !value || allowable_values.include?(value)
      end
    end

    # Attribute mapping from ruby-style variable name to JSON key.
    def self.attribute_map
      {
        :'pki_customer_id' => :'pkiCustomerID',
        :'fki_company_id' => :'fkiCompanyID',
        :'fki_customergroup_id' => :'fkiCustomergroupID',
        :'s_customer_name' => :'sCustomerName',
        :'fki_contactinformations_id' => :'fkiContactinformationsID',
        :'fki_contactcontainer_id' => :'fkiContactcontainerID',
        :'fki_image_id' => :'fkiImageID',
        :'fki_glaccountcontainer_id' => :'fkiGlaccountcontainerID',
        :'fki_language_id' => :'fkiLanguageID',
        :'fki_department_id' => :'fkiDepartmentID',
        :'fki_paymentmethod_id' => :'fkiPaymentmethodID',
        :'fki_electronicfundstransferbankaccount_id' => :'fkiElectronicfundstransferbankaccountID',
        :'fki_electronicfundstransferbankaccount_id_directdebit' => :'fkiElectronicfundstransferbankaccountIDDirectdebit',
        :'fki_sendingmethod_id' => :'fkiSendingmethodID',
        :'fki_taxassignment_id' => :'fkiTaxassignmentID',
        :'fki_attendancestatus_id' => :'fkiAttendancestatusID',
        :'fki_agent_id_variableexpensechargeto' => :'fkiAgentIDVariableexpensechargeto',
        :'fki_broker_id_variableexpensechargeto' => :'fkiBrokerIDVariableexpensechargeto',
        :'fki_customer_id_variableexpensechargeto' => :'fkiCustomerIDVariableexpensechargeto',
        :'fki_glaccountcontainer_id_variableexpensechargeto' => :'fkiGlaccountcontainerIDVariableexpensechargeto',
        :'fki_agent_id_supplychargechargeto' => :'fkiAgentIDSupplychargechargeto',
        :'fki_broker_id_supplychargechargeto' => :'fkiBrokerIDSupplychargechargeto',
        :'fki_customer_id_supplychargechargeto' => :'fkiCustomerIDSupplychargechargeto',
        :'fki_glaccountcontainer_id_supplychargechargeto' => :'fkiGlaccountcontainerIDSupplychargechargeto',
        :'fki_invoicealternatelogo_id' => :'fkiInvoicealternatelogoID',
        :'fki_synchronizationlinkserver_id' => :'fkiSynchronizationlinkserverID',
        :'efki_user_id' => :'efkiUserID',
        :'efks_customer_code' => :'efksCustomerCode',
        :'s_customer_code' => :'sCustomerCode',
        :'d_customer_fulltimeequivalent' => :'dCustomerFulltimeequivalent',
        :'i_customer_photocopiercode' => :'iCustomerPhotocopiercode',
        :'i_customer_longdistancecode' => :'iCustomerLongdistancecode',
        :'i_customer_timewindowstart' => :'iCustomerTimewindowstart',
        :'i_customer_timewindowend' => :'iCustomerTimewindowend',
        :'d_customer_minimumchargeableinterests' => :'dCustomerMinimumchargeableinterests',
        :'dt_customer_birthdate' => :'dtCustomerBirthdate',
        :'dt_customer_transfer' => :'dtCustomerTransfer',
        :'dt_customer_transferappointment' => :'dtCustomerTransferappointment',
        :'dt_customer_transfersurvey' => :'dtCustomerTransfersurvey',
        :'b_customer_isactive' => :'bCustomerIsactive',
        :'b_customer_variableexpensefinanced' => :'bCustomerVariableexpensefinanced',
        :'b_customer_variableexpensefinancedtaxes' => :'bCustomerVariableexpensefinancedtaxes',
        :'b_customer_supplychargefinanced' => :'bCustomerSupplychargefinanced',
        :'b_customer_supplychargefinancedtaxes' => :'bCustomerSupplychargefinancedtaxes',
        :'b_customer_attendance' => :'bCustomerAttendance',
        :'e_customer_type' => :'eCustomerType',
        :'e_customer_marketingcorrespondence' => :'eCustomerMarketingcorrespondence',
        :'b_customer_blackcopycarbon' => :'bCustomerBlackcopycarbon',
        :'b_customer_unsubscribeinfo' => :'bCustomerUnsubscribeinfo',
        :'t_customer_comment' => :'tCustomerComment',
        :'importid' => :'IMPORTID'
      }
    end

    # Returns all the JSON keys this model knows about
    def self.acceptable_attributes
      attribute_map.values
    end

    # Attribute type mapping.
    def self.openapi_types
      {
        :'pki_customer_id' => :'Integer',
        :'fki_company_id' => :'Integer',
        :'fki_customergroup_id' => :'Integer',
        :'s_customer_name' => :'String',
        :'fki_contactinformations_id' => :'Integer',
        :'fki_contactcontainer_id' => :'Integer',
        :'fki_image_id' => :'Integer',
        :'fki_glaccountcontainer_id' => :'Integer',
        :'fki_language_id' => :'Integer',
        :'fki_department_id' => :'Integer',
        :'fki_paymentmethod_id' => :'Integer',
        :'fki_electronicfundstransferbankaccount_id' => :'Integer',
        :'fki_electronicfundstransferbankaccount_id_directdebit' => :'Integer',
        :'fki_sendingmethod_id' => :'Integer',
        :'fki_taxassignment_id' => :'Integer',
        :'fki_attendancestatus_id' => :'Integer',
        :'fki_agent_id_variableexpensechargeto' => :'Integer',
        :'fki_broker_id_variableexpensechargeto' => :'Integer',
        :'fki_customer_id_variableexpensechargeto' => :'Integer',
        :'fki_glaccountcontainer_id_variableexpensechargeto' => :'Integer',
        :'fki_agent_id_supplychargechargeto' => :'Integer',
        :'fki_broker_id_supplychargechargeto' => :'Integer',
        :'fki_customer_id_supplychargechargeto' => :'Integer',
        :'fki_glaccountcontainer_id_supplychargechargeto' => :'Integer',
        :'fki_invoicealternatelogo_id' => :'Integer',
        :'fki_synchronizationlinkserver_id' => :'Integer',
        :'efki_user_id' => :'Integer',
        :'efks_customer_code' => :'String',
        :'s_customer_code' => :'String',
        :'d_customer_fulltimeequivalent' => :'String',
        :'i_customer_photocopiercode' => :'Integer',
        :'i_customer_longdistancecode' => :'Integer',
        :'i_customer_timewindowstart' => :'Integer',
        :'i_customer_timewindowend' => :'Integer',
        :'d_customer_minimumchargeableinterests' => :'String',
        :'dt_customer_birthdate' => :'String',
        :'dt_customer_transfer' => :'String',
        :'dt_customer_transferappointment' => :'String',
        :'dt_customer_transfersurvey' => :'String',
        :'b_customer_isactive' => :'Boolean',
        :'b_customer_variableexpensefinanced' => :'Boolean',
        :'b_customer_variableexpensefinancedtaxes' => :'Boolean',
        :'b_customer_supplychargefinanced' => :'Boolean',
        :'b_customer_supplychargefinancedtaxes' => :'Boolean',
        :'b_customer_attendance' => :'Boolean',
        :'e_customer_type' => :'FieldECustomerType',
        :'e_customer_marketingcorrespondence' => :'FieldECustomerMarketingcorrespondence',
        :'b_customer_blackcopycarbon' => :'Boolean',
        :'b_customer_unsubscribeinfo' => :'Boolean',
        :'t_customer_comment' => :'String',
        :'importid' => :'String'
      }
    end

    # List of attributes with nullable: true
    def self.openapi_nullable
      Set.new([
      ])
    end

    # Initializes the object
    # @param [Hash] attributes Model attributes in the form of hash
    def initialize(attributes = {})
      if (!attributes.is_a?(Hash))
        fail ArgumentError, "The input argument (attributes) must be a hash in `EzmaxApi::CustomerRequest` initialize method"
      end

      # check to see if the attribute exists and convert string to symbol for hash key
      attributes = attributes.each_with_object({}) { |(k, v), h|
        if (!self.class.attribute_map.key?(k.to_sym))
          fail ArgumentError, "`#{k}` is not a valid attribute in `EzmaxApi::CustomerRequest`. Please check the name to make sure it's valid. List of attributes: " + self.class.attribute_map.keys.inspect
        end
        h[k.to_sym] = v
      }

      if attributes.key?(:'pki_customer_id')
        self.pki_customer_id = attributes[:'pki_customer_id']
      end

      if attributes.key?(:'fki_company_id')
        self.fki_company_id = attributes[:'fki_company_id']
      else
        self.fki_company_id = nil
      end

      if attributes.key?(:'fki_customergroup_id')
        self.fki_customergroup_id = attributes[:'fki_customergroup_id']
      else
        self.fki_customergroup_id = nil
      end

      if attributes.key?(:'s_customer_name')
        self.s_customer_name = attributes[:'s_customer_name']
      else
        self.s_customer_name = nil
      end

      if attributes.key?(:'fki_contactinformations_id')
        self.fki_contactinformations_id = attributes[:'fki_contactinformations_id']
      else
        self.fki_contactinformations_id = nil
      end

      if attributes.key?(:'fki_contactcontainer_id')
        self.fki_contactcontainer_id = attributes[:'fki_contactcontainer_id']
      else
        self.fki_contactcontainer_id = nil
      end

      if attributes.key?(:'fki_image_id')
        self.fki_image_id = attributes[:'fki_image_id']
      else
        self.fki_image_id = nil
      end

      if attributes.key?(:'fki_glaccountcontainer_id')
        self.fki_glaccountcontainer_id = attributes[:'fki_glaccountcontainer_id']
      else
        self.fki_glaccountcontainer_id = nil
      end

      if attributes.key?(:'fki_language_id')
        self.fki_language_id = attributes[:'fki_language_id']
      else
        self.fki_language_id = nil
      end

      if attributes.key?(:'fki_department_id')
        self.fki_department_id = attributes[:'fki_department_id']
      else
        self.fki_department_id = nil
      end

      if attributes.key?(:'fki_paymentmethod_id')
        self.fki_paymentmethod_id = attributes[:'fki_paymentmethod_id']
      else
        self.fki_paymentmethod_id = nil
      end

      if attributes.key?(:'fki_electronicfundstransferbankaccount_id')
        self.fki_electronicfundstransferbankaccount_id = attributes[:'fki_electronicfundstransferbankaccount_id']
      else
        self.fki_electronicfundstransferbankaccount_id = nil
      end

      if attributes.key?(:'fki_electronicfundstransferbankaccount_id_directdebit')
        self.fki_electronicfundstransferbankaccount_id_directdebit = attributes[:'fki_electronicfundstransferbankaccount_id_directdebit']
      else
        self.fki_electronicfundstransferbankaccount_id_directdebit = nil
      end

      if attributes.key?(:'fki_sendingmethod_id')
        self.fki_sendingmethod_id = attributes[:'fki_sendingmethod_id']
      else
        self.fki_sendingmethod_id = nil
      end

      if attributes.key?(:'fki_taxassignment_id')
        self.fki_taxassignment_id = attributes[:'fki_taxassignment_id']
      else
        self.fki_taxassignment_id = nil
      end

      if attributes.key?(:'fki_attendancestatus_id')
        self.fki_attendancestatus_id = attributes[:'fki_attendancestatus_id']
      else
        self.fki_attendancestatus_id = nil
      end

      if attributes.key?(:'fki_agent_id_variableexpensechargeto')
        self.fki_agent_id_variableexpensechargeto = attributes[:'fki_agent_id_variableexpensechargeto']
      else
        self.fki_agent_id_variableexpensechargeto = nil
      end

      if attributes.key?(:'fki_broker_id_variableexpensechargeto')
        self.fki_broker_id_variableexpensechargeto = attributes[:'fki_broker_id_variableexpensechargeto']
      else
        self.fki_broker_id_variableexpensechargeto = nil
      end

      if attributes.key?(:'fki_customer_id_variableexpensechargeto')
        self.fki_customer_id_variableexpensechargeto = attributes[:'fki_customer_id_variableexpensechargeto']
      else
        self.fki_customer_id_variableexpensechargeto = nil
      end

      if attributes.key?(:'fki_glaccountcontainer_id_variableexpensechargeto')
        self.fki_glaccountcontainer_id_variableexpensechargeto = attributes[:'fki_glaccountcontainer_id_variableexpensechargeto']
      else
        self.fki_glaccountcontainer_id_variableexpensechargeto = nil
      end

      if attributes.key?(:'fki_agent_id_supplychargechargeto')
        self.fki_agent_id_supplychargechargeto = attributes[:'fki_agent_id_supplychargechargeto']
      else
        self.fki_agent_id_supplychargechargeto = nil
      end

      if attributes.key?(:'fki_broker_id_supplychargechargeto')
        self.fki_broker_id_supplychargechargeto = attributes[:'fki_broker_id_supplychargechargeto']
      else
        self.fki_broker_id_supplychargechargeto = nil
      end

      if attributes.key?(:'fki_customer_id_supplychargechargeto')
        self.fki_customer_id_supplychargechargeto = attributes[:'fki_customer_id_supplychargechargeto']
      else
        self.fki_customer_id_supplychargechargeto = nil
      end

      if attributes.key?(:'fki_glaccountcontainer_id_supplychargechargeto')
        self.fki_glaccountcontainer_id_supplychargechargeto = attributes[:'fki_glaccountcontainer_id_supplychargechargeto']
      else
        self.fki_glaccountcontainer_id_supplychargechargeto = nil
      end

      if attributes.key?(:'fki_invoicealternatelogo_id')
        self.fki_invoicealternatelogo_id = attributes[:'fki_invoicealternatelogo_id']
      else
        self.fki_invoicealternatelogo_id = nil
      end

      if attributes.key?(:'fki_synchronizationlinkserver_id')
        self.fki_synchronizationlinkserver_id = attributes[:'fki_synchronizationlinkserver_id']
      else
        self.fki_synchronizationlinkserver_id = nil
      end

      if attributes.key?(:'efki_user_id')
        self.efki_user_id = attributes[:'efki_user_id']
      end

      if attributes.key?(:'efks_customer_code')
        self.efks_customer_code = attributes[:'efks_customer_code']
      end

      if attributes.key?(:'s_customer_code')
        self.s_customer_code = attributes[:'s_customer_code']
      else
        self.s_customer_code = nil
      end

      if attributes.key?(:'d_customer_fulltimeequivalent')
        self.d_customer_fulltimeequivalent = attributes[:'d_customer_fulltimeequivalent']
      else
        self.d_customer_fulltimeequivalent = nil
      end

      if attributes.key?(:'i_customer_photocopiercode')
        self.i_customer_photocopiercode = attributes[:'i_customer_photocopiercode']
      else
        self.i_customer_photocopiercode = nil
      end

      if attributes.key?(:'i_customer_longdistancecode')
        self.i_customer_longdistancecode = attributes[:'i_customer_longdistancecode']
      else
        self.i_customer_longdistancecode = nil
      end

      if attributes.key?(:'i_customer_timewindowstart')
        self.i_customer_timewindowstart = attributes[:'i_customer_timewindowstart']
      else
        self.i_customer_timewindowstart = nil
      end

      if attributes.key?(:'i_customer_timewindowend')
        self.i_customer_timewindowend = attributes[:'i_customer_timewindowend']
      else
        self.i_customer_timewindowend = nil
      end

      if attributes.key?(:'d_customer_minimumchargeableinterests')
        self.d_customer_minimumchargeableinterests = attributes[:'d_customer_minimumchargeableinterests']
      else
        self.d_customer_minimumchargeableinterests = nil
      end

      if attributes.key?(:'dt_customer_birthdate')
        self.dt_customer_birthdate = attributes[:'dt_customer_birthdate']
      else
        self.dt_customer_birthdate = nil
      end

      if attributes.key?(:'dt_customer_transfer')
        self.dt_customer_transfer = attributes[:'dt_customer_transfer']
      else
        self.dt_customer_transfer = nil
      end

      if attributes.key?(:'dt_customer_transferappointment')
        self.dt_customer_transferappointment = attributes[:'dt_customer_transferappointment']
      else
        self.dt_customer_transferappointment = nil
      end

      if attributes.key?(:'dt_customer_transfersurvey')
        self.dt_customer_transfersurvey = attributes[:'dt_customer_transfersurvey']
      else
        self.dt_customer_transfersurvey = nil
      end

      if attributes.key?(:'b_customer_isactive')
        self.b_customer_isactive = attributes[:'b_customer_isactive']
      else
        self.b_customer_isactive = nil
      end

      if attributes.key?(:'b_customer_variableexpensefinanced')
        self.b_customer_variableexpensefinanced = attributes[:'b_customer_variableexpensefinanced']
      else
        self.b_customer_variableexpensefinanced = nil
      end

      if attributes.key?(:'b_customer_variableexpensefinancedtaxes')
        self.b_customer_variableexpensefinancedtaxes = attributes[:'b_customer_variableexpensefinancedtaxes']
      else
        self.b_customer_variableexpensefinancedtaxes = nil
      end

      if attributes.key?(:'b_customer_supplychargefinanced')
        self.b_customer_supplychargefinanced = attributes[:'b_customer_supplychargefinanced']
      else
        self.b_customer_supplychargefinanced = nil
      end

      if attributes.key?(:'b_customer_supplychargefinancedtaxes')
        self.b_customer_supplychargefinancedtaxes = attributes[:'b_customer_supplychargefinancedtaxes']
      else
        self.b_customer_supplychargefinancedtaxes = nil
      end

      if attributes.key?(:'b_customer_attendance')
        self.b_customer_attendance = attributes[:'b_customer_attendance']
      else
        self.b_customer_attendance = nil
      end

      if attributes.key?(:'e_customer_type')
        self.e_customer_type = attributes[:'e_customer_type']
      else
        self.e_customer_type = nil
      end

      if attributes.key?(:'e_customer_marketingcorrespondence')
        self.e_customer_marketingcorrespondence = attributes[:'e_customer_marketingcorrespondence']
      else
        self.e_customer_marketingcorrespondence = nil
      end

      if attributes.key?(:'b_customer_blackcopycarbon')
        self.b_customer_blackcopycarbon = attributes[:'b_customer_blackcopycarbon']
      else
        self.b_customer_blackcopycarbon = nil
      end

      if attributes.key?(:'b_customer_unsubscribeinfo')
        self.b_customer_unsubscribeinfo = attributes[:'b_customer_unsubscribeinfo']
      else
        self.b_customer_unsubscribeinfo = nil
      end

      if attributes.key?(:'t_customer_comment')
        self.t_customer_comment = attributes[:'t_customer_comment']
      else
        self.t_customer_comment = nil
      end

      if attributes.key?(:'importid')
        self.importid = attributes[:'importid']
      end
    end

    # Show invalid properties with the reasons. Usually used together with valid?
    # @return Array for valid properties with the reasons
    def list_invalid_properties
      warn '[DEPRECATED] the `list_invalid_properties` method is obsolete'
      invalid_properties = Array.new
      if !@pki_customer_id.nil? && @pki_customer_id < 0
        invalid_properties.push('invalid value for "pki_customer_id", must be greater than or equal to 0.')
      end

      if @fki_company_id.nil?
        invalid_properties.push('invalid value for "fki_company_id", fki_company_id cannot be nil.')
      end

      if @fki_company_id > 255
        invalid_properties.push('invalid value for "fki_company_id", must be smaller than or equal to 255.')
      end

      if @fki_company_id < 1
        invalid_properties.push('invalid value for "fki_company_id", must be greater than or equal to 1.')
      end

      if @fki_customergroup_id.nil?
        invalid_properties.push('invalid value for "fki_customergroup_id", fki_customergroup_id cannot be nil.')
      end

      if @fki_customergroup_id > 255
        invalid_properties.push('invalid value for "fki_customergroup_id", must be smaller than or equal to 255.')
      end

      if @fki_customergroup_id < 0
        invalid_properties.push('invalid value for "fki_customergroup_id", must be greater than or equal to 0.')
      end

      if @s_customer_name.nil?
        invalid_properties.push('invalid value for "s_customer_name", s_customer_name cannot be nil.')
      end

      pattern = Regexp.new(/^.{0,50}$/)
      if @s_customer_name !~ pattern
        invalid_properties.push("invalid value for \"s_customer_name\", must conform to the pattern #{pattern}.")
      end

      if @fki_contactinformations_id.nil?
        invalid_properties.push('invalid value for "fki_contactinformations_id", fki_contactinformations_id cannot be nil.')
      end

      if @fki_contactinformations_id > 16777215
        invalid_properties.push('invalid value for "fki_contactinformations_id", must be smaller than or equal to 16777215.')
      end

      if @fki_contactinformations_id < 0
        invalid_properties.push('invalid value for "fki_contactinformations_id", must be greater than or equal to 0.')
      end

      if @fki_contactcontainer_id.nil?
        invalid_properties.push('invalid value for "fki_contactcontainer_id", fki_contactcontainer_id cannot be nil.')
      end

      if @fki_contactcontainer_id > 16777215
        invalid_properties.push('invalid value for "fki_contactcontainer_id", must be smaller than or equal to 16777215.')
      end

      if @fki_contactcontainer_id < 0
        invalid_properties.push('invalid value for "fki_contactcontainer_id", must be greater than or equal to 0.')
      end

      if @fki_image_id.nil?
        invalid_properties.push('invalid value for "fki_image_id", fki_image_id cannot be nil.')
      end

      if @fki_glaccountcontainer_id.nil?
        invalid_properties.push('invalid value for "fki_glaccountcontainer_id", fki_glaccountcontainer_id cannot be nil.')
      end

      if @fki_glaccountcontainer_id < 0
        invalid_properties.push('invalid value for "fki_glaccountcontainer_id", must be greater than or equal to 0.')
      end

      if @fki_language_id.nil?
        invalid_properties.push('invalid value for "fki_language_id", fki_language_id cannot be nil.')
      end

      if @fki_language_id > 2
        invalid_properties.push('invalid value for "fki_language_id", must be smaller than or equal to 2.')
      end

      if @fki_language_id < 1
        invalid_properties.push('invalid value for "fki_language_id", must be greater than or equal to 1.')
      end

      if @fki_department_id.nil?
        invalid_properties.push('invalid value for "fki_department_id", fki_department_id cannot be nil.')
      end

      if @fki_department_id < 0
        invalid_properties.push('invalid value for "fki_department_id", must be greater than or equal to 0.')
      end

      if @fki_paymentmethod_id.nil?
        invalid_properties.push('invalid value for "fki_paymentmethod_id", fki_paymentmethod_id cannot be nil.')
      end

      if @fki_paymentmethod_id > 255
        invalid_properties.push('invalid value for "fki_paymentmethod_id", must be smaller than or equal to 255.')
      end

      if @fki_paymentmethod_id < 0
        invalid_properties.push('invalid value for "fki_paymentmethod_id", must be greater than or equal to 0.')
      end

      if @fki_electronicfundstransferbankaccount_id.nil?
        invalid_properties.push('invalid value for "fki_electronicfundstransferbankaccount_id", fki_electronicfundstransferbankaccount_id cannot be nil.')
      end

      if @fki_electronicfundstransferbankaccount_id > 65535
        invalid_properties.push('invalid value for "fki_electronicfundstransferbankaccount_id", must be smaller than or equal to 65535.')
      end

      if @fki_electronicfundstransferbankaccount_id < 0
        invalid_properties.push('invalid value for "fki_electronicfundstransferbankaccount_id", must be greater than or equal to 0.')
      end

      if @fki_electronicfundstransferbankaccount_id_directdebit.nil?
        invalid_properties.push('invalid value for "fki_electronicfundstransferbankaccount_id_directdebit", fki_electronicfundstransferbankaccount_id_directdebit cannot be nil.')
      end

      if @fki_electronicfundstransferbankaccount_id_directdebit > 65535
        invalid_properties.push('invalid value for "fki_electronicfundstransferbankaccount_id_directdebit", must be smaller than or equal to 65535.')
      end

      if @fki_electronicfundstransferbankaccount_id_directdebit < 0
        invalid_properties.push('invalid value for "fki_electronicfundstransferbankaccount_id_directdebit", must be greater than or equal to 0.')
      end

      if @fki_sendingmethod_id.nil?
        invalid_properties.push('invalid value for "fki_sendingmethod_id", fki_sendingmethod_id cannot be nil.')
      end

      if @fki_sendingmethod_id > 255
        invalid_properties.push('invalid value for "fki_sendingmethod_id", must be smaller than or equal to 255.')
      end

      if @fki_sendingmethod_id < 0
        invalid_properties.push('invalid value for "fki_sendingmethod_id", must be greater than or equal to 0.')
      end

      if @fki_taxassignment_id.nil?
        invalid_properties.push('invalid value for "fki_taxassignment_id", fki_taxassignment_id cannot be nil.')
      end

      if @fki_taxassignment_id > 15
        invalid_properties.push('invalid value for "fki_taxassignment_id", must be smaller than or equal to 15.')
      end

      if @fki_taxassignment_id < 0
        invalid_properties.push('invalid value for "fki_taxassignment_id", must be greater than or equal to 0.')
      end

      if @fki_attendancestatus_id.nil?
        invalid_properties.push('invalid value for "fki_attendancestatus_id", fki_attendancestatus_id cannot be nil.')
      end

      if @fki_attendancestatus_id > 65535
        invalid_properties.push('invalid value for "fki_attendancestatus_id", must be smaller than or equal to 65535.')
      end

      if @fki_attendancestatus_id < 0
        invalid_properties.push('invalid value for "fki_attendancestatus_id", must be greater than or equal to 0.')
      end

      if @fki_agent_id_variableexpensechargeto.nil?
        invalid_properties.push('invalid value for "fki_agent_id_variableexpensechargeto", fki_agent_id_variableexpensechargeto cannot be nil.')
      end

      if @fki_agent_id_variableexpensechargeto < 0
        invalid_properties.push('invalid value for "fki_agent_id_variableexpensechargeto", must be greater than or equal to 0.')
      end

      if @fki_broker_id_variableexpensechargeto.nil?
        invalid_properties.push('invalid value for "fki_broker_id_variableexpensechargeto", fki_broker_id_variableexpensechargeto cannot be nil.')
      end

      if @fki_broker_id_variableexpensechargeto < 0
        invalid_properties.push('invalid value for "fki_broker_id_variableexpensechargeto", must be greater than or equal to 0.')
      end

      if @fki_customer_id_variableexpensechargeto.nil?
        invalid_properties.push('invalid value for "fki_customer_id_variableexpensechargeto", fki_customer_id_variableexpensechargeto cannot be nil.')
      end

      if @fki_customer_id_variableexpensechargeto < 0
        invalid_properties.push('invalid value for "fki_customer_id_variableexpensechargeto", must be greater than or equal to 0.')
      end

      if @fki_glaccountcontainer_id_variableexpensechargeto.nil?
        invalid_properties.push('invalid value for "fki_glaccountcontainer_id_variableexpensechargeto", fki_glaccountcontainer_id_variableexpensechargeto cannot be nil.')
      end

      if @fki_glaccountcontainer_id_variableexpensechargeto < 0
        invalid_properties.push('invalid value for "fki_glaccountcontainer_id_variableexpensechargeto", must be greater than or equal to 0.')
      end

      if @fki_agent_id_supplychargechargeto.nil?
        invalid_properties.push('invalid value for "fki_agent_id_supplychargechargeto", fki_agent_id_supplychargechargeto cannot be nil.')
      end

      if @fki_agent_id_supplychargechargeto < 0
        invalid_properties.push('invalid value for "fki_agent_id_supplychargechargeto", must be greater than or equal to 0.')
      end

      if @fki_broker_id_supplychargechargeto.nil?
        invalid_properties.push('invalid value for "fki_broker_id_supplychargechargeto", fki_broker_id_supplychargechargeto cannot be nil.')
      end

      if @fki_broker_id_supplychargechargeto < 0
        invalid_properties.push('invalid value for "fki_broker_id_supplychargechargeto", must be greater than or equal to 0.')
      end

      if @fki_customer_id_supplychargechargeto.nil?
        invalid_properties.push('invalid value for "fki_customer_id_supplychargechargeto", fki_customer_id_supplychargechargeto cannot be nil.')
      end

      if @fki_customer_id_supplychargechargeto < 0
        invalid_properties.push('invalid value for "fki_customer_id_supplychargechargeto", must be greater than or equal to 0.')
      end

      if @fki_glaccountcontainer_id_supplychargechargeto.nil?
        invalid_properties.push('invalid value for "fki_glaccountcontainer_id_supplychargechargeto", fki_glaccountcontainer_id_supplychargechargeto cannot be nil.')
      end

      if @fki_glaccountcontainer_id_supplychargechargeto < 0
        invalid_properties.push('invalid value for "fki_glaccountcontainer_id_supplychargechargeto", must be greater than or equal to 0.')
      end

      if @fki_invoicealternatelogo_id.nil?
        invalid_properties.push('invalid value for "fki_invoicealternatelogo_id", fki_invoicealternatelogo_id cannot be nil.')
      end

      if @fki_invoicealternatelogo_id > 255
        invalid_properties.push('invalid value for "fki_invoicealternatelogo_id", must be smaller than or equal to 255.')
      end

      if @fki_invoicealternatelogo_id < 0
        invalid_properties.push('invalid value for "fki_invoicealternatelogo_id", must be greater than or equal to 0.')
      end

      if @fki_synchronizationlinkserver_id.nil?
        invalid_properties.push('invalid value for "fki_synchronizationlinkserver_id", fki_synchronizationlinkserver_id cannot be nil.')
      end

      if @fki_synchronizationlinkserver_id > 255
        invalid_properties.push('invalid value for "fki_synchronizationlinkserver_id", must be smaller than or equal to 255.')
      end

      if @fki_synchronizationlinkserver_id < 0
        invalid_properties.push('invalid value for "fki_synchronizationlinkserver_id", must be greater than or equal to 0.')
      end

      if !@efki_user_id.nil? && @efki_user_id < 0
        invalid_properties.push('invalid value for "efki_user_id", must be greater than or equal to 0.')
      end

      pattern = Regexp.new(/^.{0,6}$/)
      if !@efks_customer_code.nil? && @efks_customer_code !~ pattern
        invalid_properties.push("invalid value for \"efks_customer_code\", must conform to the pattern #{pattern}.")
      end

      if @s_customer_code.nil?
        invalid_properties.push('invalid value for "s_customer_code", s_customer_code cannot be nil.')
      end

      pattern = Regexp.new(/^.{0,6}$/)
      if @s_customer_code !~ pattern
        invalid_properties.push("invalid value for \"s_customer_code\", must conform to the pattern #{pattern}.")
      end

      if @d_customer_fulltimeequivalent.nil?
        invalid_properties.push('invalid value for "d_customer_fulltimeequivalent", d_customer_fulltimeequivalent cannot be nil.')
      end

      pattern = Regexp.new(/^-{0,1}[\d]{1,3}?\.[\d]{2}$/)
      if @d_customer_fulltimeequivalent !~ pattern
        invalid_properties.push("invalid value for \"d_customer_fulltimeequivalent\", must conform to the pattern #{pattern}.")
      end

      if @i_customer_photocopiercode.nil?
        invalid_properties.push('invalid value for "i_customer_photocopiercode", i_customer_photocopiercode cannot be nil.')
      end

      if @i_customer_photocopiercode > 16777215
        invalid_properties.push('invalid value for "i_customer_photocopiercode", must be smaller than or equal to 16777215.')
      end

      if @i_customer_photocopiercode < 0
        invalid_properties.push('invalid value for "i_customer_photocopiercode", must be greater than or equal to 0.')
      end

      if @i_customer_longdistancecode.nil?
        invalid_properties.push('invalid value for "i_customer_longdistancecode", i_customer_longdistancecode cannot be nil.')
      end

      if @i_customer_longdistancecode > 16777215
        invalid_properties.push('invalid value for "i_customer_longdistancecode", must be smaller than or equal to 16777215.')
      end

      if @i_customer_longdistancecode < 0
        invalid_properties.push('invalid value for "i_customer_longdistancecode", must be greater than or equal to 0.')
      end

      if @i_customer_timewindowstart.nil?
        invalid_properties.push('invalid value for "i_customer_timewindowstart", i_customer_timewindowstart cannot be nil.')
      end

      if @i_customer_timewindowstart > 255
        invalid_properties.push('invalid value for "i_customer_timewindowstart", must be smaller than or equal to 255.')
      end

      if @i_customer_timewindowstart < 0
        invalid_properties.push('invalid value for "i_customer_timewindowstart", must be greater than or equal to 0.')
      end

      if @i_customer_timewindowend.nil?
        invalid_properties.push('invalid value for "i_customer_timewindowend", i_customer_timewindowend cannot be nil.')
      end

      if @i_customer_timewindowend > 255
        invalid_properties.push('invalid value for "i_customer_timewindowend", must be smaller than or equal to 255.')
      end

      if @i_customer_timewindowend < 0
        invalid_properties.push('invalid value for "i_customer_timewindowend", must be greater than or equal to 0.')
      end

      if @d_customer_minimumchargeableinterests.nil?
        invalid_properties.push('invalid value for "d_customer_minimumchargeableinterests", d_customer_minimumchargeableinterests cannot be nil.')
      end

      pattern = Regexp.new(/^-{0,1}[\d]{1,9}?\.[\d]{2}$/)
      if @d_customer_minimumchargeableinterests !~ pattern
        invalid_properties.push("invalid value for \"d_customer_minimumchargeableinterests\", must conform to the pattern #{pattern}.")
      end

      if @dt_customer_birthdate.nil?
        invalid_properties.push('invalid value for "dt_customer_birthdate", dt_customer_birthdate cannot be nil.')
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/)
      if @dt_customer_birthdate !~ pattern
        invalid_properties.push("invalid value for \"dt_customer_birthdate\", must conform to the pattern #{pattern}.")
      end

      if @dt_customer_transfer.nil?
        invalid_properties.push('invalid value for "dt_customer_transfer", dt_customer_transfer cannot be nil.')
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      if @dt_customer_transfer !~ pattern
        invalid_properties.push("invalid value for \"dt_customer_transfer\", must conform to the pattern #{pattern}.")
      end

      if @dt_customer_transferappointment.nil?
        invalid_properties.push('invalid value for "dt_customer_transferappointment", dt_customer_transferappointment cannot be nil.')
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      if @dt_customer_transferappointment !~ pattern
        invalid_properties.push("invalid value for \"dt_customer_transferappointment\", must conform to the pattern #{pattern}.")
      end

      if @dt_customer_transfersurvey.nil?
        invalid_properties.push('invalid value for "dt_customer_transfersurvey", dt_customer_transfersurvey cannot be nil.')
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      if @dt_customer_transfersurvey !~ pattern
        invalid_properties.push("invalid value for \"dt_customer_transfersurvey\", must conform to the pattern #{pattern}.")
      end

      if @b_customer_isactive.nil?
        invalid_properties.push('invalid value for "b_customer_isactive", b_customer_isactive cannot be nil.')
      end

      if @b_customer_variableexpensefinanced.nil?
        invalid_properties.push('invalid value for "b_customer_variableexpensefinanced", b_customer_variableexpensefinanced cannot be nil.')
      end

      if @b_customer_variableexpensefinancedtaxes.nil?
        invalid_properties.push('invalid value for "b_customer_variableexpensefinancedtaxes", b_customer_variableexpensefinancedtaxes cannot be nil.')
      end

      if @b_customer_supplychargefinanced.nil?
        invalid_properties.push('invalid value for "b_customer_supplychargefinanced", b_customer_supplychargefinanced cannot be nil.')
      end

      if @b_customer_supplychargefinancedtaxes.nil?
        invalid_properties.push('invalid value for "b_customer_supplychargefinancedtaxes", b_customer_supplychargefinancedtaxes cannot be nil.')
      end

      if @b_customer_attendance.nil?
        invalid_properties.push('invalid value for "b_customer_attendance", b_customer_attendance cannot be nil.')
      end

      if @e_customer_type.nil?
        invalid_properties.push('invalid value for "e_customer_type", e_customer_type cannot be nil.')
      end

      if @e_customer_marketingcorrespondence.nil?
        invalid_properties.push('invalid value for "e_customer_marketingcorrespondence", e_customer_marketingcorrespondence cannot be nil.')
      end

      if @b_customer_blackcopycarbon.nil?
        invalid_properties.push('invalid value for "b_customer_blackcopycarbon", b_customer_blackcopycarbon cannot be nil.')
      end

      if @b_customer_unsubscribeinfo.nil?
        invalid_properties.push('invalid value for "b_customer_unsubscribeinfo", b_customer_unsubscribeinfo cannot be nil.')
      end

      if @t_customer_comment.nil?
        invalid_properties.push('invalid value for "t_customer_comment", t_customer_comment cannot be nil.')
      end

      pattern = Regexp.new(/^.{0,16777215}$/)
      if @t_customer_comment !~ pattern
        invalid_properties.push("invalid value for \"t_customer_comment\", must conform to the pattern #{pattern}.")
      end

      pattern = Regexp.new(/^.{0,15}$/)
      if !@importid.nil? && @importid !~ pattern
        invalid_properties.push("invalid value for \"importid\", must conform to the pattern #{pattern}.")
      end

      invalid_properties
    end

    # Check to see if the all the properties in the model are valid
    # @return true if the model is valid
    def valid?
      warn '[DEPRECATED] the `valid?` method is obsolete'
      return false if !@pki_customer_id.nil? && @pki_customer_id < 0
      return false if @fki_company_id.nil?
      return false if @fki_company_id > 255
      return false if @fki_company_id < 1
      return false if @fki_customergroup_id.nil?
      return false if @fki_customergroup_id > 255
      return false if @fki_customergroup_id < 0
      return false if @s_customer_name.nil?
      return false if @s_customer_name !~ Regexp.new(/^.{0,50}$/)
      return false if @fki_contactinformations_id.nil?
      return false if @fki_contactinformations_id > 16777215
      return false if @fki_contactinformations_id < 0
      return false if @fki_contactcontainer_id.nil?
      return false if @fki_contactcontainer_id > 16777215
      return false if @fki_contactcontainer_id < 0
      return false if @fki_image_id.nil?
      return false if @fki_glaccountcontainer_id.nil?
      return false if @fki_glaccountcontainer_id < 0
      return false if @fki_language_id.nil?
      return false if @fki_language_id > 2
      return false if @fki_language_id < 1
      return false if @fki_department_id.nil?
      return false if @fki_department_id < 0
      return false if @fki_paymentmethod_id.nil?
      return false if @fki_paymentmethod_id > 255
      return false if @fki_paymentmethod_id < 0
      return false if @fki_electronicfundstransferbankaccount_id.nil?
      return false if @fki_electronicfundstransferbankaccount_id > 65535
      return false if @fki_electronicfundstransferbankaccount_id < 0
      return false if @fki_electronicfundstransferbankaccount_id_directdebit.nil?
      return false if @fki_electronicfundstransferbankaccount_id_directdebit > 65535
      return false if @fki_electronicfundstransferbankaccount_id_directdebit < 0
      return false if @fki_sendingmethod_id.nil?
      return false if @fki_sendingmethod_id > 255
      return false if @fki_sendingmethod_id < 0
      return false if @fki_taxassignment_id.nil?
      return false if @fki_taxassignment_id > 15
      return false if @fki_taxassignment_id < 0
      return false if @fki_attendancestatus_id.nil?
      return false if @fki_attendancestatus_id > 65535
      return false if @fki_attendancestatus_id < 0
      return false if @fki_agent_id_variableexpensechargeto.nil?
      return false if @fki_agent_id_variableexpensechargeto < 0
      return false if @fki_broker_id_variableexpensechargeto.nil?
      return false if @fki_broker_id_variableexpensechargeto < 0
      return false if @fki_customer_id_variableexpensechargeto.nil?
      return false if @fki_customer_id_variableexpensechargeto < 0
      return false if @fki_glaccountcontainer_id_variableexpensechargeto.nil?
      return false if @fki_glaccountcontainer_id_variableexpensechargeto < 0
      return false if @fki_agent_id_supplychargechargeto.nil?
      return false if @fki_agent_id_supplychargechargeto < 0
      return false if @fki_broker_id_supplychargechargeto.nil?
      return false if @fki_broker_id_supplychargechargeto < 0
      return false if @fki_customer_id_supplychargechargeto.nil?
      return false if @fki_customer_id_supplychargechargeto < 0
      return false if @fki_glaccountcontainer_id_supplychargechargeto.nil?
      return false if @fki_glaccountcontainer_id_supplychargechargeto < 0
      return false if @fki_invoicealternatelogo_id.nil?
      return false if @fki_invoicealternatelogo_id > 255
      return false if @fki_invoicealternatelogo_id < 0
      return false if @fki_synchronizationlinkserver_id.nil?
      return false if @fki_synchronizationlinkserver_id > 255
      return false if @fki_synchronizationlinkserver_id < 0
      return false if !@efki_user_id.nil? && @efki_user_id < 0
      return false if !@efks_customer_code.nil? && @efks_customer_code !~ Regexp.new(/^.{0,6}$/)
      return false if @s_customer_code.nil?
      return false if @s_customer_code !~ Regexp.new(/^.{0,6}$/)
      return false if @d_customer_fulltimeequivalent.nil?
      return false if @d_customer_fulltimeequivalent !~ Regexp.new(/^-{0,1}[\d]{1,3}?\.[\d]{2}$/)
      return false if @i_customer_photocopiercode.nil?
      return false if @i_customer_photocopiercode > 16777215
      return false if @i_customer_photocopiercode < 0
      return false if @i_customer_longdistancecode.nil?
      return false if @i_customer_longdistancecode > 16777215
      return false if @i_customer_longdistancecode < 0
      return false if @i_customer_timewindowstart.nil?
      return false if @i_customer_timewindowstart > 255
      return false if @i_customer_timewindowstart < 0
      return false if @i_customer_timewindowend.nil?
      return false if @i_customer_timewindowend > 255
      return false if @i_customer_timewindowend < 0
      return false if @d_customer_minimumchargeableinterests.nil?
      return false if @d_customer_minimumchargeableinterests !~ Regexp.new(/^-{0,1}[\d]{1,9}?\.[\d]{2}$/)
      return false if @dt_customer_birthdate.nil?
      return false if @dt_customer_birthdate !~ Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/)
      return false if @dt_customer_transfer.nil?
      return false if @dt_customer_transfer !~ Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      return false if @dt_customer_transferappointment.nil?
      return false if @dt_customer_transferappointment !~ Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      return false if @dt_customer_transfersurvey.nil?
      return false if @dt_customer_transfersurvey !~ Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      return false if @b_customer_isactive.nil?
      return false if @b_customer_variableexpensefinanced.nil?
      return false if @b_customer_variableexpensefinancedtaxes.nil?
      return false if @b_customer_supplychargefinanced.nil?
      return false if @b_customer_supplychargefinancedtaxes.nil?
      return false if @b_customer_attendance.nil?
      return false if @e_customer_type.nil?
      return false if @e_customer_marketingcorrespondence.nil?
      return false if @b_customer_blackcopycarbon.nil?
      return false if @b_customer_unsubscribeinfo.nil?
      return false if @t_customer_comment.nil?
      return false if @t_customer_comment !~ Regexp.new(/^.{0,16777215}$/)
      return false if !@importid.nil? && @importid !~ Regexp.new(/^.{0,15}$/)
      true
    end

    # Custom attribute writer method with validation
    # @param [Object] pki_customer_id Value to be assigned
    def pki_customer_id=(pki_customer_id)
      if pki_customer_id.nil?
        fail ArgumentError, 'pki_customer_id cannot be nil'
      end

      if pki_customer_id < 0
        fail ArgumentError, 'invalid value for "pki_customer_id", must be greater than or equal to 0.'
      end

      @pki_customer_id = pki_customer_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_company_id Value to be assigned
    def fki_company_id=(fki_company_id)
      if fki_company_id.nil?
        fail ArgumentError, 'fki_company_id cannot be nil'
      end

      if fki_company_id > 255
        fail ArgumentError, 'invalid value for "fki_company_id", must be smaller than or equal to 255.'
      end

      if fki_company_id < 1
        fail ArgumentError, 'invalid value for "fki_company_id", must be greater than or equal to 1.'
      end

      @fki_company_id = fki_company_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_customergroup_id Value to be assigned
    def fki_customergroup_id=(fki_customergroup_id)
      if fki_customergroup_id.nil?
        fail ArgumentError, 'fki_customergroup_id cannot be nil'
      end

      if fki_customergroup_id > 255
        fail ArgumentError, 'invalid value for "fki_customergroup_id", must be smaller than or equal to 255.'
      end

      if fki_customergroup_id < 0
        fail ArgumentError, 'invalid value for "fki_customergroup_id", must be greater than or equal to 0.'
      end

      @fki_customergroup_id = fki_customergroup_id
    end

    # Custom attribute writer method with validation
    # @param [Object] s_customer_name Value to be assigned
    def s_customer_name=(s_customer_name)
      if s_customer_name.nil?
        fail ArgumentError, 's_customer_name cannot be nil'
      end

      pattern = Regexp.new(/^.{0,50}$/)
      if s_customer_name !~ pattern
        fail ArgumentError, "invalid value for \"s_customer_name\", must conform to the pattern #{pattern}."
      end

      @s_customer_name = s_customer_name
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_contactinformations_id Value to be assigned
    def fki_contactinformations_id=(fki_contactinformations_id)
      if fki_contactinformations_id.nil?
        fail ArgumentError, 'fki_contactinformations_id cannot be nil'
      end

      if fki_contactinformations_id > 16777215
        fail ArgumentError, 'invalid value for "fki_contactinformations_id", must be smaller than or equal to 16777215.'
      end

      if fki_contactinformations_id < 0
        fail ArgumentError, 'invalid value for "fki_contactinformations_id", must be greater than or equal to 0.'
      end

      @fki_contactinformations_id = fki_contactinformations_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_contactcontainer_id Value to be assigned
    def fki_contactcontainer_id=(fki_contactcontainer_id)
      if fki_contactcontainer_id.nil?
        fail ArgumentError, 'fki_contactcontainer_id cannot be nil'
      end

      if fki_contactcontainer_id > 16777215
        fail ArgumentError, 'invalid value for "fki_contactcontainer_id", must be smaller than or equal to 16777215.'
      end

      if fki_contactcontainer_id < 0
        fail ArgumentError, 'invalid value for "fki_contactcontainer_id", must be greater than or equal to 0.'
      end

      @fki_contactcontainer_id = fki_contactcontainer_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_glaccountcontainer_id Value to be assigned
    def fki_glaccountcontainer_id=(fki_glaccountcontainer_id)
      if fki_glaccountcontainer_id.nil?
        fail ArgumentError, 'fki_glaccountcontainer_id cannot be nil'
      end

      if fki_glaccountcontainer_id < 0
        fail ArgumentError, 'invalid value for "fki_glaccountcontainer_id", must be greater than or equal to 0.'
      end

      @fki_glaccountcontainer_id = fki_glaccountcontainer_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_language_id Value to be assigned
    def fki_language_id=(fki_language_id)
      if fki_language_id.nil?
        fail ArgumentError, 'fki_language_id cannot be nil'
      end

      if fki_language_id > 2
        fail ArgumentError, 'invalid value for "fki_language_id", must be smaller than or equal to 2.'
      end

      if fki_language_id < 1
        fail ArgumentError, 'invalid value for "fki_language_id", must be greater than or equal to 1.'
      end

      @fki_language_id = fki_language_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_department_id Value to be assigned
    def fki_department_id=(fki_department_id)
      if fki_department_id.nil?
        fail ArgumentError, 'fki_department_id cannot be nil'
      end

      if fki_department_id < 0
        fail ArgumentError, 'invalid value for "fki_department_id", must be greater than or equal to 0.'
      end

      @fki_department_id = fki_department_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_paymentmethod_id Value to be assigned
    def fki_paymentmethod_id=(fki_paymentmethod_id)
      if fki_paymentmethod_id.nil?
        fail ArgumentError, 'fki_paymentmethod_id cannot be nil'
      end

      if fki_paymentmethod_id > 255
        fail ArgumentError, 'invalid value for "fki_paymentmethod_id", must be smaller than or equal to 255.'
      end

      if fki_paymentmethod_id < 0
        fail ArgumentError, 'invalid value for "fki_paymentmethod_id", must be greater than or equal to 0.'
      end

      @fki_paymentmethod_id = fki_paymentmethod_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_electronicfundstransferbankaccount_id Value to be assigned
    def fki_electronicfundstransferbankaccount_id=(fki_electronicfundstransferbankaccount_id)
      if fki_electronicfundstransferbankaccount_id.nil?
        fail ArgumentError, 'fki_electronicfundstransferbankaccount_id cannot be nil'
      end

      if fki_electronicfundstransferbankaccount_id > 65535
        fail ArgumentError, 'invalid value for "fki_electronicfundstransferbankaccount_id", must be smaller than or equal to 65535.'
      end

      if fki_electronicfundstransferbankaccount_id < 0
        fail ArgumentError, 'invalid value for "fki_electronicfundstransferbankaccount_id", must be greater than or equal to 0.'
      end

      @fki_electronicfundstransferbankaccount_id = fki_electronicfundstransferbankaccount_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_electronicfundstransferbankaccount_id_directdebit Value to be assigned
    def fki_electronicfundstransferbankaccount_id_directdebit=(fki_electronicfundstransferbankaccount_id_directdebit)
      if fki_electronicfundstransferbankaccount_id_directdebit.nil?
        fail ArgumentError, 'fki_electronicfundstransferbankaccount_id_directdebit cannot be nil'
      end

      if fki_electronicfundstransferbankaccount_id_directdebit > 65535
        fail ArgumentError, 'invalid value for "fki_electronicfundstransferbankaccount_id_directdebit", must be smaller than or equal to 65535.'
      end

      if fki_electronicfundstransferbankaccount_id_directdebit < 0
        fail ArgumentError, 'invalid value for "fki_electronicfundstransferbankaccount_id_directdebit", must be greater than or equal to 0.'
      end

      @fki_electronicfundstransferbankaccount_id_directdebit = fki_electronicfundstransferbankaccount_id_directdebit
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_sendingmethod_id Value to be assigned
    def fki_sendingmethod_id=(fki_sendingmethod_id)
      if fki_sendingmethod_id.nil?
        fail ArgumentError, 'fki_sendingmethod_id cannot be nil'
      end

      if fki_sendingmethod_id > 255
        fail ArgumentError, 'invalid value for "fki_sendingmethod_id", must be smaller than or equal to 255.'
      end

      if fki_sendingmethod_id < 0
        fail ArgumentError, 'invalid value for "fki_sendingmethod_id", must be greater than or equal to 0.'
      end

      @fki_sendingmethod_id = fki_sendingmethod_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_taxassignment_id Value to be assigned
    def fki_taxassignment_id=(fki_taxassignment_id)
      if fki_taxassignment_id.nil?
        fail ArgumentError, 'fki_taxassignment_id cannot be nil'
      end

      if fki_taxassignment_id > 15
        fail ArgumentError, 'invalid value for "fki_taxassignment_id", must be smaller than or equal to 15.'
      end

      if fki_taxassignment_id < 0
        fail ArgumentError, 'invalid value for "fki_taxassignment_id", must be greater than or equal to 0.'
      end

      @fki_taxassignment_id = fki_taxassignment_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_attendancestatus_id Value to be assigned
    def fki_attendancestatus_id=(fki_attendancestatus_id)
      if fki_attendancestatus_id.nil?
        fail ArgumentError, 'fki_attendancestatus_id cannot be nil'
      end

      if fki_attendancestatus_id > 65535
        fail ArgumentError, 'invalid value for "fki_attendancestatus_id", must be smaller than or equal to 65535.'
      end

      if fki_attendancestatus_id < 0
        fail ArgumentError, 'invalid value for "fki_attendancestatus_id", must be greater than or equal to 0.'
      end

      @fki_attendancestatus_id = fki_attendancestatus_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_agent_id_variableexpensechargeto Value to be assigned
    def fki_agent_id_variableexpensechargeto=(fki_agent_id_variableexpensechargeto)
      if fki_agent_id_variableexpensechargeto.nil?
        fail ArgumentError, 'fki_agent_id_variableexpensechargeto cannot be nil'
      end

      if fki_agent_id_variableexpensechargeto < 0
        fail ArgumentError, 'invalid value for "fki_agent_id_variableexpensechargeto", must be greater than or equal to 0.'
      end

      @fki_agent_id_variableexpensechargeto = fki_agent_id_variableexpensechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_broker_id_variableexpensechargeto Value to be assigned
    def fki_broker_id_variableexpensechargeto=(fki_broker_id_variableexpensechargeto)
      if fki_broker_id_variableexpensechargeto.nil?
        fail ArgumentError, 'fki_broker_id_variableexpensechargeto cannot be nil'
      end

      if fki_broker_id_variableexpensechargeto < 0
        fail ArgumentError, 'invalid value for "fki_broker_id_variableexpensechargeto", must be greater than or equal to 0.'
      end

      @fki_broker_id_variableexpensechargeto = fki_broker_id_variableexpensechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_customer_id_variableexpensechargeto Value to be assigned
    def fki_customer_id_variableexpensechargeto=(fki_customer_id_variableexpensechargeto)
      if fki_customer_id_variableexpensechargeto.nil?
        fail ArgumentError, 'fki_customer_id_variableexpensechargeto cannot be nil'
      end

      if fki_customer_id_variableexpensechargeto < 0
        fail ArgumentError, 'invalid value for "fki_customer_id_variableexpensechargeto", must be greater than or equal to 0.'
      end

      @fki_customer_id_variableexpensechargeto = fki_customer_id_variableexpensechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_glaccountcontainer_id_variableexpensechargeto Value to be assigned
    def fki_glaccountcontainer_id_variableexpensechargeto=(fki_glaccountcontainer_id_variableexpensechargeto)
      if fki_glaccountcontainer_id_variableexpensechargeto.nil?
        fail ArgumentError, 'fki_glaccountcontainer_id_variableexpensechargeto cannot be nil'
      end

      if fki_glaccountcontainer_id_variableexpensechargeto < 0
        fail ArgumentError, 'invalid value for "fki_glaccountcontainer_id_variableexpensechargeto", must be greater than or equal to 0.'
      end

      @fki_glaccountcontainer_id_variableexpensechargeto = fki_glaccountcontainer_id_variableexpensechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_agent_id_supplychargechargeto Value to be assigned
    def fki_agent_id_supplychargechargeto=(fki_agent_id_supplychargechargeto)
      if fki_agent_id_supplychargechargeto.nil?
        fail ArgumentError, 'fki_agent_id_supplychargechargeto cannot be nil'
      end

      if fki_agent_id_supplychargechargeto < 0
        fail ArgumentError, 'invalid value for "fki_agent_id_supplychargechargeto", must be greater than or equal to 0.'
      end

      @fki_agent_id_supplychargechargeto = fki_agent_id_supplychargechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_broker_id_supplychargechargeto Value to be assigned
    def fki_broker_id_supplychargechargeto=(fki_broker_id_supplychargechargeto)
      if fki_broker_id_supplychargechargeto.nil?
        fail ArgumentError, 'fki_broker_id_supplychargechargeto cannot be nil'
      end

      if fki_broker_id_supplychargechargeto < 0
        fail ArgumentError, 'invalid value for "fki_broker_id_supplychargechargeto", must be greater than or equal to 0.'
      end

      @fki_broker_id_supplychargechargeto = fki_broker_id_supplychargechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_customer_id_supplychargechargeto Value to be assigned
    def fki_customer_id_supplychargechargeto=(fki_customer_id_supplychargechargeto)
      if fki_customer_id_supplychargechargeto.nil?
        fail ArgumentError, 'fki_customer_id_supplychargechargeto cannot be nil'
      end

      if fki_customer_id_supplychargechargeto < 0
        fail ArgumentError, 'invalid value for "fki_customer_id_supplychargechargeto", must be greater than or equal to 0.'
      end

      @fki_customer_id_supplychargechargeto = fki_customer_id_supplychargechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_glaccountcontainer_id_supplychargechargeto Value to be assigned
    def fki_glaccountcontainer_id_supplychargechargeto=(fki_glaccountcontainer_id_supplychargechargeto)
      if fki_glaccountcontainer_id_supplychargechargeto.nil?
        fail ArgumentError, 'fki_glaccountcontainer_id_supplychargechargeto cannot be nil'
      end

      if fki_glaccountcontainer_id_supplychargechargeto < 0
        fail ArgumentError, 'invalid value for "fki_glaccountcontainer_id_supplychargechargeto", must be greater than or equal to 0.'
      end

      @fki_glaccountcontainer_id_supplychargechargeto = fki_glaccountcontainer_id_supplychargechargeto
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_invoicealternatelogo_id Value to be assigned
    def fki_invoicealternatelogo_id=(fki_invoicealternatelogo_id)
      if fki_invoicealternatelogo_id.nil?
        fail ArgumentError, 'fki_invoicealternatelogo_id cannot be nil'
      end

      if fki_invoicealternatelogo_id > 255
        fail ArgumentError, 'invalid value for "fki_invoicealternatelogo_id", must be smaller than or equal to 255.'
      end

      if fki_invoicealternatelogo_id < 0
        fail ArgumentError, 'invalid value for "fki_invoicealternatelogo_id", must be greater than or equal to 0.'
      end

      @fki_invoicealternatelogo_id = fki_invoicealternatelogo_id
    end

    # Custom attribute writer method with validation
    # @param [Object] fki_synchronizationlinkserver_id Value to be assigned
    def fki_synchronizationlinkserver_id=(fki_synchronizationlinkserver_id)
      if fki_synchronizationlinkserver_id.nil?
        fail ArgumentError, 'fki_synchronizationlinkserver_id cannot be nil'
      end

      if fki_synchronizationlinkserver_id > 255
        fail ArgumentError, 'invalid value for "fki_synchronizationlinkserver_id", must be smaller than or equal to 255.'
      end

      if fki_synchronizationlinkserver_id < 0
        fail ArgumentError, 'invalid value for "fki_synchronizationlinkserver_id", must be greater than or equal to 0.'
      end

      @fki_synchronizationlinkserver_id = fki_synchronizationlinkserver_id
    end

    # Custom attribute writer method with validation
    # @param [Object] efki_user_id Value to be assigned
    def efki_user_id=(efki_user_id)
      if efki_user_id.nil?
        fail ArgumentError, 'efki_user_id cannot be nil'
      end

      if efki_user_id < 0
        fail ArgumentError, 'invalid value for "efki_user_id", must be greater than or equal to 0.'
      end

      @efki_user_id = efki_user_id
    end

    # Custom attribute writer method with validation
    # @param [Object] efks_customer_code Value to be assigned
    def efks_customer_code=(efks_customer_code)
      if efks_customer_code.nil?
        fail ArgumentError, 'efks_customer_code cannot be nil'
      end

      pattern = Regexp.new(/^.{0,6}$/)
      if efks_customer_code !~ pattern
        fail ArgumentError, "invalid value for \"efks_customer_code\", must conform to the pattern #{pattern}."
      end

      @efks_customer_code = efks_customer_code
    end

    # Custom attribute writer method with validation
    # @param [Object] s_customer_code Value to be assigned
    def s_customer_code=(s_customer_code)
      if s_customer_code.nil?
        fail ArgumentError, 's_customer_code cannot be nil'
      end

      pattern = Regexp.new(/^.{0,6}$/)
      if s_customer_code !~ pattern
        fail ArgumentError, "invalid value for \"s_customer_code\", must conform to the pattern #{pattern}."
      end

      @s_customer_code = s_customer_code
    end

    # Custom attribute writer method with validation
    # @param [Object] d_customer_fulltimeequivalent Value to be assigned
    def d_customer_fulltimeequivalent=(d_customer_fulltimeequivalent)
      if d_customer_fulltimeequivalent.nil?
        fail ArgumentError, 'd_customer_fulltimeequivalent cannot be nil'
      end

      pattern = Regexp.new(/^-{0,1}[\d]{1,3}?\.[\d]{2}$/)
      if d_customer_fulltimeequivalent !~ pattern
        fail ArgumentError, "invalid value for \"d_customer_fulltimeequivalent\", must conform to the pattern #{pattern}."
      end

      @d_customer_fulltimeequivalent = d_customer_fulltimeequivalent
    end

    # Custom attribute writer method with validation
    # @param [Object] i_customer_photocopiercode Value to be assigned
    def i_customer_photocopiercode=(i_customer_photocopiercode)
      if i_customer_photocopiercode.nil?
        fail ArgumentError, 'i_customer_photocopiercode cannot be nil'
      end

      if i_customer_photocopiercode > 16777215
        fail ArgumentError, 'invalid value for "i_customer_photocopiercode", must be smaller than or equal to 16777215.'
      end

      if i_customer_photocopiercode < 0
        fail ArgumentError, 'invalid value for "i_customer_photocopiercode", must be greater than or equal to 0.'
      end

      @i_customer_photocopiercode = i_customer_photocopiercode
    end

    # Custom attribute writer method with validation
    # @param [Object] i_customer_longdistancecode Value to be assigned
    def i_customer_longdistancecode=(i_customer_longdistancecode)
      if i_customer_longdistancecode.nil?
        fail ArgumentError, 'i_customer_longdistancecode cannot be nil'
      end

      if i_customer_longdistancecode > 16777215
        fail ArgumentError, 'invalid value for "i_customer_longdistancecode", must be smaller than or equal to 16777215.'
      end

      if i_customer_longdistancecode < 0
        fail ArgumentError, 'invalid value for "i_customer_longdistancecode", must be greater than or equal to 0.'
      end

      @i_customer_longdistancecode = i_customer_longdistancecode
    end

    # Custom attribute writer method with validation
    # @param [Object] i_customer_timewindowstart Value to be assigned
    def i_customer_timewindowstart=(i_customer_timewindowstart)
      if i_customer_timewindowstart.nil?
        fail ArgumentError, 'i_customer_timewindowstart cannot be nil'
      end

      if i_customer_timewindowstart > 255
        fail ArgumentError, 'invalid value for "i_customer_timewindowstart", must be smaller than or equal to 255.'
      end

      if i_customer_timewindowstart < 0
        fail ArgumentError, 'invalid value for "i_customer_timewindowstart", must be greater than or equal to 0.'
      end

      @i_customer_timewindowstart = i_customer_timewindowstart
    end

    # Custom attribute writer method with validation
    # @param [Object] i_customer_timewindowend Value to be assigned
    def i_customer_timewindowend=(i_customer_timewindowend)
      if i_customer_timewindowend.nil?
        fail ArgumentError, 'i_customer_timewindowend cannot be nil'
      end

      if i_customer_timewindowend > 255
        fail ArgumentError, 'invalid value for "i_customer_timewindowend", must be smaller than or equal to 255.'
      end

      if i_customer_timewindowend < 0
        fail ArgumentError, 'invalid value for "i_customer_timewindowend", must be greater than or equal to 0.'
      end

      @i_customer_timewindowend = i_customer_timewindowend
    end

    # Custom attribute writer method with validation
    # @param [Object] d_customer_minimumchargeableinterests Value to be assigned
    def d_customer_minimumchargeableinterests=(d_customer_minimumchargeableinterests)
      if d_customer_minimumchargeableinterests.nil?
        fail ArgumentError, 'd_customer_minimumchargeableinterests cannot be nil'
      end

      pattern = Regexp.new(/^-{0,1}[\d]{1,9}?\.[\d]{2}$/)
      if d_customer_minimumchargeableinterests !~ pattern
        fail ArgumentError, "invalid value for \"d_customer_minimumchargeableinterests\", must conform to the pattern #{pattern}."
      end

      @d_customer_minimumchargeableinterests = d_customer_minimumchargeableinterests
    end

    # Custom attribute writer method with validation
    # @param [Object] dt_customer_birthdate Value to be assigned
    def dt_customer_birthdate=(dt_customer_birthdate)
      if dt_customer_birthdate.nil?
        fail ArgumentError, 'dt_customer_birthdate cannot be nil'
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1])$/)
      if dt_customer_birthdate !~ pattern
        fail ArgumentError, "invalid value for \"dt_customer_birthdate\", must conform to the pattern #{pattern}."
      end

      @dt_customer_birthdate = dt_customer_birthdate
    end

    # Custom attribute writer method with validation
    # @param [Object] dt_customer_transfer Value to be assigned
    def dt_customer_transfer=(dt_customer_transfer)
      if dt_customer_transfer.nil?
        fail ArgumentError, 'dt_customer_transfer cannot be nil'
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      if dt_customer_transfer !~ pattern
        fail ArgumentError, "invalid value for \"dt_customer_transfer\", must conform to the pattern #{pattern}."
      end

      @dt_customer_transfer = dt_customer_transfer
    end

    # Custom attribute writer method with validation
    # @param [Object] dt_customer_transferappointment Value to be assigned
    def dt_customer_transferappointment=(dt_customer_transferappointment)
      if dt_customer_transferappointment.nil?
        fail ArgumentError, 'dt_customer_transferappointment cannot be nil'
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      if dt_customer_transferappointment !~ pattern
        fail ArgumentError, "invalid value for \"dt_customer_transferappointment\", must conform to the pattern #{pattern}."
      end

      @dt_customer_transferappointment = dt_customer_transferappointment
    end

    # Custom attribute writer method with validation
    # @param [Object] dt_customer_transfersurvey Value to be assigned
    def dt_customer_transfersurvey=(dt_customer_transfersurvey)
      if dt_customer_transfersurvey.nil?
        fail ArgumentError, 'dt_customer_transfersurvey cannot be nil'
      end

      pattern = Regexp.new(/^[0-9]{4}-(0[1-9]|1[0-2])-(0[1-9]|[1-2][0-9]|3[0-1]) ([01]?[0-9]|2[0-3]):([0-5][0-9]):([0-5][0-9])$/)
      if dt_customer_transfersurvey !~ pattern
        fail ArgumentError, "invalid value for \"dt_customer_transfersurvey\", must conform to the pattern #{pattern}."
      end

      @dt_customer_transfersurvey = dt_customer_transfersurvey
    end

    # Custom attribute writer method with validation
    # @param [Object] t_customer_comment Value to be assigned
    def t_customer_comment=(t_customer_comment)
      if t_customer_comment.nil?
        fail ArgumentError, 't_customer_comment cannot be nil'
      end

      pattern = Regexp.new(/^.{0,16777215}$/)
      if t_customer_comment !~ pattern
        fail ArgumentError, "invalid value for \"t_customer_comment\", must conform to the pattern #{pattern}."
      end

      @t_customer_comment = t_customer_comment
    end

    # Custom attribute writer method with validation
    # @param [Object] importid Value to be assigned
    def importid=(importid)
      if importid.nil?
        fail ArgumentError, 'importid cannot be nil'
      end

      pattern = Regexp.new(/^.{0,15}$/)
      if importid !~ pattern
        fail ArgumentError, "invalid value for \"importid\", must conform to the pattern #{pattern}."
      end

      @importid = importid
    end

    # Checks equality by comparing each attribute.
    # @param [Object] Object to be compared
    def ==(o)
      return true if self.equal?(o)
      self.class == o.class &&
          pki_customer_id == o.pki_customer_id &&
          fki_company_id == o.fki_company_id &&
          fki_customergroup_id == o.fki_customergroup_id &&
          s_customer_name == o.s_customer_name &&
          fki_contactinformations_id == o.fki_contactinformations_id &&
          fki_contactcontainer_id == o.fki_contactcontainer_id &&
          fki_image_id == o.fki_image_id &&
          fki_glaccountcontainer_id == o.fki_glaccountcontainer_id &&
          fki_language_id == o.fki_language_id &&
          fki_department_id == o.fki_department_id &&
          fki_paymentmethod_id == o.fki_paymentmethod_id &&
          fki_electronicfundstransferbankaccount_id == o.fki_electronicfundstransferbankaccount_id &&
          fki_electronicfundstransferbankaccount_id_directdebit == o.fki_electronicfundstransferbankaccount_id_directdebit &&
          fki_sendingmethod_id == o.fki_sendingmethod_id &&
          fki_taxassignment_id == o.fki_taxassignment_id &&
          fki_attendancestatus_id == o.fki_attendancestatus_id &&
          fki_agent_id_variableexpensechargeto == o.fki_agent_id_variableexpensechargeto &&
          fki_broker_id_variableexpensechargeto == o.fki_broker_id_variableexpensechargeto &&
          fki_customer_id_variableexpensechargeto == o.fki_customer_id_variableexpensechargeto &&
          fki_glaccountcontainer_id_variableexpensechargeto == o.fki_glaccountcontainer_id_variableexpensechargeto &&
          fki_agent_id_supplychargechargeto == o.fki_agent_id_supplychargechargeto &&
          fki_broker_id_supplychargechargeto == o.fki_broker_id_supplychargechargeto &&
          fki_customer_id_supplychargechargeto == o.fki_customer_id_supplychargechargeto &&
          fki_glaccountcontainer_id_supplychargechargeto == o.fki_glaccountcontainer_id_supplychargechargeto &&
          fki_invoicealternatelogo_id == o.fki_invoicealternatelogo_id &&
          fki_synchronizationlinkserver_id == o.fki_synchronizationlinkserver_id &&
          efki_user_id == o.efki_user_id &&
          efks_customer_code == o.efks_customer_code &&
          s_customer_code == o.s_customer_code &&
          d_customer_fulltimeequivalent == o.d_customer_fulltimeequivalent &&
          i_customer_photocopiercode == o.i_customer_photocopiercode &&
          i_customer_longdistancecode == o.i_customer_longdistancecode &&
          i_customer_timewindowstart == o.i_customer_timewindowstart &&
          i_customer_timewindowend == o.i_customer_timewindowend &&
          d_customer_minimumchargeableinterests == o.d_customer_minimumchargeableinterests &&
          dt_customer_birthdate == o.dt_customer_birthdate &&
          dt_customer_transfer == o.dt_customer_transfer &&
          dt_customer_transferappointment == o.dt_customer_transferappointment &&
          dt_customer_transfersurvey == o.dt_customer_transfersurvey &&
          b_customer_isactive == o.b_customer_isactive &&
          b_customer_variableexpensefinanced == o.b_customer_variableexpensefinanced &&
          b_customer_variableexpensefinancedtaxes == o.b_customer_variableexpensefinancedtaxes &&
          b_customer_supplychargefinanced == o.b_customer_supplychargefinanced &&
          b_customer_supplychargefinancedtaxes == o.b_customer_supplychargefinancedtaxes &&
          b_customer_attendance == o.b_customer_attendance &&
          e_customer_type == o.e_customer_type &&
          e_customer_marketingcorrespondence == o.e_customer_marketingcorrespondence &&
          b_customer_blackcopycarbon == o.b_customer_blackcopycarbon &&
          b_customer_unsubscribeinfo == o.b_customer_unsubscribeinfo &&
          t_customer_comment == o.t_customer_comment &&
          importid == o.importid
    end

    # @see the `==` method
    # @param [Object] Object to be compared
    def eql?(o)
      self == o
    end

    # Calculates hash code according to all attributes.
    # @return [Integer] Hash code
    def hash
      [pki_customer_id, fki_company_id, fki_customergroup_id, s_customer_name, fki_contactinformations_id, fki_contactcontainer_id, fki_image_id, fki_glaccountcontainer_id, fki_language_id, fki_department_id, fki_paymentmethod_id, fki_electronicfundstransferbankaccount_id, fki_electronicfundstransferbankaccount_id_directdebit, fki_sendingmethod_id, fki_taxassignment_id, fki_attendancestatus_id, fki_agent_id_variableexpensechargeto, fki_broker_id_variableexpensechargeto, fki_customer_id_variableexpensechargeto, fki_glaccountcontainer_id_variableexpensechargeto, fki_agent_id_supplychargechargeto, fki_broker_id_supplychargechargeto, fki_customer_id_supplychargechargeto, fki_glaccountcontainer_id_supplychargechargeto, fki_invoicealternatelogo_id, fki_synchronizationlinkserver_id, efki_user_id, efks_customer_code, s_customer_code, d_customer_fulltimeequivalent, i_customer_photocopiercode, i_customer_longdistancecode, i_customer_timewindowstart, i_customer_timewindowend, d_customer_minimumchargeableinterests, dt_customer_birthdate, dt_customer_transfer, dt_customer_transferappointment, dt_customer_transfersurvey, b_customer_isactive, b_customer_variableexpensefinanced, b_customer_variableexpensefinancedtaxes, b_customer_supplychargefinanced, b_customer_supplychargefinancedtaxes, b_customer_attendance, e_customer_type, e_customer_marketingcorrespondence, b_customer_blackcopycarbon, b_customer_unsubscribeinfo, t_customer_comment, importid].hash
    end

    # Builds the object from hash
    # @param [Hash] attributes Model attributes in the form of hash
    # @return [Object] Returns the model itself
    def self.build_from_hash(attributes)
      return nil unless attributes.is_a?(Hash)
      attributes = attributes.transform_keys(&:to_sym)
      transformed_hash = {}
      openapi_types.each_pair do |key, type|
        if attributes.key?(attribute_map[key]) && attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = nil
        elsif type =~ /\AArray<(.*)>/i
          # check to ensure the input is an array given that the attribute
          # is documented as an array but the input is not
          if attributes[attribute_map[key]].is_a?(Array)
            transformed_hash["#{key}"] = attributes[attribute_map[key]].map { |v| _deserialize($1, v) }
          end
        elsif !attributes[attribute_map[key]].nil?
          transformed_hash["#{key}"] = _deserialize(type, attributes[attribute_map[key]])
        end
      end
      new(transformed_hash)
    end

    # Deserializes the data based on type
    # @param string type Data type
    # @param string value Value to be deserialized
    # @return [Object] Deserialized data
    def self._deserialize(type, value)
      case type.to_sym
      when :Time
        Time.parse(value)
      when :Date
        Date.parse(value)
      when :String
        value.to_s
      when :Integer
        value.to_i
      when :Float
        value.to_f
      when :Boolean
        if value.to_s =~ /\A(true|t|yes|y|1)\z/i
          true
        else
          false
        end
      when :Object
        # generic object (usually a Hash), return directly
        value
      when /\AArray<(?<inner_type>.+)>\z/
        inner_type = Regexp.last_match[:inner_type]
        value.map { |v| _deserialize(inner_type, v) }
      when /\AHash<(?<k_type>.+?), (?<v_type>.+)>\z/
        k_type = Regexp.last_match[:k_type]
        v_type = Regexp.last_match[:v_type]
        {}.tap do |hash|
          value.each do |k, v|
            hash[_deserialize(k_type, k)] = _deserialize(v_type, v)
          end
        end
      else # model
        # models (e.g. Pet) or oneOf
        klass = EzmaxApi.const_get(type)
        klass.respond_to?(:openapi_any_of) || klass.respond_to?(:openapi_one_of) ? klass.build(value) : klass.build_from_hash(value)
      end
    end

    # Returns the string representation of the object
    # @return [String] String presentation of the object
    def to_s
      to_hash.to_s
    end

    # to_body is an alias to to_hash (backward compatibility)
    # @return [Hash] Returns the object in the form of hash
    def to_body
      to_hash
    end

    # Returns the object in the form of hash
    # @return [Hash] Returns the object in the form of hash
    def to_hash
      hash = {}
      self.class.attribute_map.each_pair do |attr, param|
        value = self.send(attr)
        if value.nil?
          is_nullable = self.class.openapi_nullable.include?(attr)
          next if !is_nullable || (is_nullable && !instance_variable_defined?(:"@#{attr}"))
        end

        hash[param] = _to_hash(value)
      end
      hash
    end

    # Outputs non-array value in the form of hash
    # For object, use to_hash. Otherwise, just return the value
    # @param [Object] value Any valid value
    # @return [Hash] Returns the value in the form of hash
    def _to_hash(value)
      if value.is_a?(Array)
        value.compact.map { |v| _to_hash(v) }
      elsif value.is_a?(Hash)
        {}.tap do |hash|
          value.each { |k, v| hash[k] = _to_hash(v) }
        end
      elsif value.respond_to? :to_hash
        value.to_hash
      else
        value
      end
    end

  end

end
